package weasel.inventory;

import weasel.type.ItemStack;

public class Inventory{

	private int address;
	public Inventory(int address){
		this.address = address;
	}
	
	public static native bool swapStacks(int address, String subInventoryTo, int offsetTo, String subInventoryFrom, int offsetFrom);
	
	public bool swapStacks(String subInventoryTo, int offsetTo, String subInventoryFrom, int offsetFrom){
		return swapStacks(address, subInventoryTo, offsetTo, subInventoryFrom, offsetFrom);
	}
	
	public static native ItemStack getItemStackAt(int address, String subInventory, int offset);
	
	public ItemStack getItemStackAt(String subInventory, int offset){
		return getItemStackAt(address, subInventory, offset);
	}
	
	public static native int findSlotContainingItem(int address, String inventory, ItemStack item);
	
	public int findSlotContainingItem(String inventory, ItemStack item){
		return findSlotContainingItem(address, inventory, item);
	}
	
	public static native boolean combineStacks(int address, String inventoryTarget, int offsetTarget, String inventoryFrom, int offsetFrom);
		
	public boolean combineStacks(String inventoryTarget, int offsetTarget, String inventoryFrom, int offsetFrom){
		return combineStacks(address, inventoryTarget, offsetTarget, inventoryFrom, offsetFrom);
	}
}